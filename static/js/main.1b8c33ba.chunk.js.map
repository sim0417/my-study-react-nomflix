{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Tv/TvPresenter.js","Routes/Tv/index.js","Routes/Tv/TvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","Slink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","Loader","length","map","movie","original_title","poster_path","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeConainer","state","data","results","this","setState","React","Component","TvPresenter","topRated","airingToday","show","original_name","first_air_date","TvContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","previousTerm","handleSubmit","onSubmit","placeholder","value","onChange","Search","evnet","preventDefault","trim","searchByTerm","event","target","a","BackDrop","Content","Cover","porps","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","Tv","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b8c33ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  color: white;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n\r\n  border-bottom: 3px solid ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst Slink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <Slink to=\"/\">Movies</Slink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <Slink to=\"/tv\">TV</Slink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <Slink to=\"/search\">Search</Slink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  opacity: 0;\r\n\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  margin-bottom: 3px;\r\n  display: block;\r\n\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span>⭐</span> {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upComing.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst MOVIE_API_KEY = \"5181b57410b2ce3a15385acebfc7d3e0\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: MOVIE_API_KEY,\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeConainer from \"./HomeContainer\";\r\nexport default HomeConainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing },\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Con't find movies information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TvPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Show | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTvPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TvPresenter;\r\n","import TvContainer from \"./TvContainer\";\r\nexport default TvContainer;\r\n","import React from \"react\";\r\nimport TvPresenter from \"./TvPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Con't find TV information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TvPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  updateTerm,\r\n  previousTerm,\r\n  handleSubmit,\r\n  error,\r\n  loading,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date ? movie.release_date.substring(0, 4) : \"\"}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date ? show.first_air_date.substring(0, 4) : \"\"}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#e74c3c\" />}\r\n    {movieResults && movieResults.length === 0 && tvResults && tvResults.length === 0 && (\r\n      <Message text={`Nothing found \"${previousTerm}\"`} color=\"#95a5a6\" />\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n  previousTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import Search from \"./SearchContainer\";\r\nexport default Search;\r\n","import React from \"react\";\r\nimport SeachPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    previousTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (evnet) => {\r\n    evnet.preventDefault();\r\n\r\n    let { searchTerm } = this.state;\r\n    if (searchTerm) {\r\n      searchTerm = searchTerm.trim();\r\n      if (searchTerm !== \"\") {\r\n        this.searchByTerm();\r\n      }\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    let { searchTerm } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      this.setState({ movieResults, tvResults, previousTerm: searchTerm });\r\n    } catch {\r\n      this.setState({ error: \"Con't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, previousTerm, error, loading } = this.state;\r\n    return (\r\n      <SeachPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        previousTerm={previousTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  padding: 50px;\r\n  width: 100%;\r\n  height: calc(100vh - 50px);\r\n  position: relative;\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  background-image: url(${(porps) => porps.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.8;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading... | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n      </Helmet>\r\n      <BackDrop bgUrl={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n      <Content>\r\n        <Cover\r\n          bgUrl={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1 ? genre.name : `${genre.name} / `,\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(porps) {\r\n    super(porps);\r\n    const {\r\n      location: { pathname },\r\n    } = porps;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const parsedId = parseInt(id);\r\n    const { isMovie } = this.state;\r\n\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    let result = null;\r\n\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Con't find information.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport Tv from \"Routes/Tv\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" component={Tv} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset}\r\n  a{\r\n    text-decoration : none;\r\n    color:inherit;\r\n  }\r\n  *{\r\n    box-sizing:border-box;\r\n  }\r\n  body{\r\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size:12px;\r\n    background-color:rgba(20,20,20,1);\r\n    color:white;\r\n    padding-top:50px;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport Globalstyles from \"Components/GlobalStyles\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <Globalstyles />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}